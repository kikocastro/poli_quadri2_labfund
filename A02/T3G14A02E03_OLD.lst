; T3G14A02E03
; MEMCPY: Copia uma sequência de tamanho arbitrário de wordsda memória de uma
; posição em outra. Retorna 0000 em caso de sucesso e FFFF em caso de erro 
; (ex.: endereço de destino inválido).  Parâmetros: o número de words a ser
; copiado, o endereço da sequência de origem e o endereço da sequência de 
; destino.Retorno (acumulador): 0000 em caso de sucesso; FFFF caso contrário.
; Endereço de início do programa principal: 0000Endereço do número de words
; a ser copiado: 0002Endereço inicial da sequência de origem: 0004Endereço
; inicial da sequência de destino: 0006Endereço  reservado  para  sequências
; de  origem  e  destino:0008..0018
				;	@ /0000
0000 002a		;	MAIN            JP INI
0002 0004		;	NUMBER_OF_WORDS K /0004
0004 0028		;	SEQUENCE_START  K /0028
0006 0018		;	SEQUENCE_END    K /0018
0008 0000		;	                $ /0011 ; endereços reservados para as sequencias   0
000a 0000		;	                $ /0011 ; endereços reservados para as sequencias   2
000c 0000		;	                $ /0011 ; endereços reservados para as sequencias   4
000e 0000		;	                $ /0011 ; endereços reservados para as sequencias   6
0010 0000		;	                $ /0011 ; endereços reservados para as sequencias   8
0012 0000		;	                $ /0011 ; endereços reservados para as sequencias   a
0014 0000		;	                $ /0011 ; endereços reservados para as sequencias   c
0016 0000		;	                $ /0011 ; endereços reservados para as sequencias   e
0018 0000		;	                $ /0011 ; endereços reservados para as sequencias   10
001a 0000		;	                $ /0011 ; endereços reservados para as sequencias   12
001c 0000		;	                $ /0011 ; endereços reservados para as sequencias   14
001e 0000		;	                $ /0011 ; endereços reservados para as sequencias   16
0020 0000		;	                $ /0011 ; endereços reservados para as sequencias   18
0022 0000		;	                $ /0011 ; endereços reservados para as sequencias   1a
0024 0000		;	                $ /0011 ; endereços reservados para as sequencias   1c
0026 0000		;	                $ /0011 ; endereços reservados para as sequencias   1e
0028 0000		;	                $ /0011 ; endereços reservados para as sequencias   20
				;	                $ /0011 ; endereços reservados para as sequencias
002a 8002		;	INI             LD NUMBER_OF_WORDS
                ; Verificacao de sequencia de tamanho 0
002c a054		;	                SC SAMPLE_SEQUENCE ; carrega lista de exemplo para teste
002e 1032		;	                JZ EXIT_SUCCESS ; sequencia de tamanho zero
0030 003a		;	                JP CONTINUE
0032 8044		;	EXIT_SUCCESS    LD SUCCESS
0034 0040		;	                JP END ; termina com sucesso
0036 8046		;	EXIT_FAILURE    LD FAILURE
0038 0040		;	                JP END ; termina com erro
                ; continua se sequencia nao nula
                ; Verificacoes de erro
                ; Endereco de inicio maior que fim
003a 8006		;	CONTINUE        LD SEQUENCE_END ; pega endereço de fim da sequencia
003c 5004		;	                - SEQUENCE_START
003e 1036		;	                JZ EXIT_FAILURE
                ; MM CURRENT_ADDRESS
                ; MM ADDRESS
                ; SC LOAD_VALUE ; carrega valor
                ; MM CURRENT_VALUE
                ; LD NUMBER_OF_WORDS
                ; +  SEQUENCE_START ; calcula endereço de destino
                ; +  ADDRESS_INCREMENT
                ; MM DESTINATION_ADDRESS ; guarda endereço de destino
                ; LD CURRENT_VALUE
                ; MM DESTINATION_ADDRESS
                

0040 c040		;	END             HM END
; Constantes
0042 0002		;	ADDRESS_INCREMENT   K /0002
0044 0000		;	SUCCESS             K /0000
0046 ffff		;	FAILURE             K /FFFF
; Variaveis
0048 8000		;	LOAD                LD /0000
004a 0000		;	DESTINATION_ADDRESS K  /0000
004c 0000		;	CURRENT_VALUE       K  /0000
004e 0000		;	CURRENT_ADDRESS     K  /0000
0050 0000		;	NEXT_ADDRESS        K  /0000
0052 0000		;	TEMP                K  /0000

;
0054 0000		;	SAMPLE_SEQUENCE     K  /0000
0056 3009		;	                    LV /0009
0058 9008		;	                    MM /0008
005a 3008		;	                    LV /0008
005c 900a		;	                    MM /000A
005e 3007		;	                    LV /0007
0060 900c		;	                    MM /000C
0062 3006		;	                    LV /0006
0064 900e		;	                    MM /000E
0066 b054		;	                    RS SAMPLE_SEQUENCE
;
; Subrotina GET_NEXT
;
0068 0000		;	GET_NEXT        K /0000
;
; Subrotina para carregar um valor no endereço ADDRESS
;
; Variaveis
006a 0000		;	ADDRESS         K /0000 ; Endereço em que esta o valor desejado
;
006c 0000		;	LOAD_VALUE      K /0000
006e 806a		;	                LD ADDRESS ; carrega o endereço
0070 4048		;	                + LOAD ; Soma load
0072 9074		;	                MM EXEC_LOAD ; Armazena em EXEC_LOAD
0074 0000		;	EXEC_LOAD       K /0000 ; Carrega valor do endereço
0076 b06c		;	                RS LOAD_VALUE ; END da sub rotina
;
